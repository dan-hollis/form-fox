# -----------------------------------------------------------------------------
# DISCORD BOT AUTHENTICATION
# -----------------------------------------------------------------------------

# Discord Bot Token - Your bot's password for logging into Discord
# Get this from: Discord Developer Portal > Your App > Bot > Token
# Click "Reset Token" then "Copy" to get a fresh token
TOKEN=your token

# Bot Command Prefix - Prefix for legacy text commands (bot primarily uses slash commands)
# Users can mention the bot or use this prefix for basic interactions
PREFIX=ff!

# Bot Invite URL - OAuth2 URL for adding the bot to Discord servers
# Generate this at: Discord Developer Portal > Your App > OAuth2 > URL Generator
# Required scopes: "bot" and "applications.commands"
# Required roles:
#   Manage Roles
#   View Channels
#   Send Messages
#   Manage Messages
#   Embed Links
#   Attach Files
#   Read Message History
#   Add Reactions
# Required permissions: 268561472
INVITE=botinvite

# -----------------------------------------------------------------------------
# BOT OWNERSHIP & PERMISSIONS
# -----------------------------------------------------------------------------

# Bot Owner Discord User ID - Your Discord user ID for owner-only commands
# Get this by: Enable Developer Mode in Discord > Right-click your username > "Copy User ID"
# Owner can use special commands like /owner reload, /owner give-ent, etc.
OWNER=your id

# -----------------------------------------------------------------------------
# DISCORD SERVER CONFIGURATION
# -----------------------------------------------------------------------------

# Command Guild ID - Main Discord server where slash commands are registered
# Get this by: Right-click your server name > "Copy Server ID"
# This is where the bot will register its slash commands for faster deployment
COMMAND_GUILD=guild for commands

# Development Guild ID - Discord server for testing and development commands
# Can be the same as COMMAND_GUILD if you only have one test server
# Owner-only commands and experimental features are registered here
DEV_GUILD=guild for dev-only commands

# -----------------------------------------------------------------------------
# FORM & RESPONSE SYSTEM
# -----------------------------------------------------------------------------

# Character Set - Characters used for generating unique form and response IDs
# The bot uses these characters to create random IDs like "abc123" for forms/responses
# You can customize this but keep it URL-safe (no spaces or special symbols)
# Default provides good variety with lowercase letters and numbers
CHARS=abcdefghijklmnopqrstuvwxyz1234567890

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION (PostgreSQL)
# -----------------------------------------------------------------------------
# Form Fox requires PostgreSQL to store forms, responses, user data, and configuration
# Make sure PostgreSQL is installed and running before starting the bot

# Database Host - Where your PostgreSQL server is running
# Use "localhost" for local installation, or your database server's IP/hostname
PGHOST=localhost

# Database Username - PostgreSQL user account for the bot
# Default PostgreSQL user is "postgres", but you can create a dedicated user
PGUSER=postgres

# Database Password - Password for the PostgreSQL user
# Set this to your actual PostgreSQL password
# For security, use a strong password and consider creating a dedicated bot user
PGPASSWORD=postgres

# Database Name - Name of the PostgreSQL database to use
# You can use the default "postgres" database or create a dedicated one like "formfox"
PGDATABASE=postgres

# Database Port - Port number where PostgreSQL is listening
# Default PostgreSQL port is 5432, change only if you configured a different port
PGPORT=5432

# -----------------------------------------------------------------------------
# OPTIONAL: DOCKER DEPLOYMENT
# -----------------------------------------------------------------------------

# Docker Registry URL - Only needed if deploying with Docker and custom registry
# Uncomment and set this if you're pushing to your own Docker registry
# Leave commented for local development or if using default Docker Hub
#DOCKER_REGISTRY_URL=yourregistry/form-fox:latest
